#!/usr/bin/python
'''
The Omnid simulator that connects bullet to ROS.
Subscribes : /cmd_vel
'''

import rospy
import numpy as np

import sys
#some python interpreters need '.' added
sys.path.append(".")
import pybullet as p

import time
import math
import numpy as np
import pybullet_data
from omnid_model import Omnid_Model

from geometry_msgs.msg import Twist
import os

joint_increment = 0

def sub_callback(cmd_vel_msg):
  """ Publish the Twist equivalent of the 2d velocity specified
    Args:
    tvel (TurtleVel): the 2 dimensional velocity
  """
  global joint_increment
  joint_increment += 0.1*(cmd_vel_msg.linear.x)


def main(unused_args):
  rospy.init_node("omnid_node")
  timeStep = 0.01
  c = p.connect(p.SHARED_MEMORY)
  if (c < 0):
    c = p.connect(p.GUI)
  p.setAdditionalSearchPath(pybullet_data.getDataPath())

  print('start evaluation')
  p.resetSimulation()

  p.setTimeStep(timeStep)
  p.loadURDF("/plane.urdf" )  #loads from the root pybullet library
  p.setGravity(0, 0, -10)

  urdf_path = os.path.join(os.getcwd(),'src/omnid/urdf')
  global omnid_model
  omnid_model = Omnid_Model(urdf_path)
  global joint_values

  r = rospy.Rate(1.0/timeStep)
  rospy.Subscriber("cmd_vel", Twist, sub_callback)
  joint_values = np.array([0.0, 0.0])

  # while not rospy.is_shutdown():
  while(True):
    joint_values += joint_increment
    omnid_model.applyAction(joint_values)
    p.stepSimulation()
    r.sleep()

if __name__ == "__main__":
    try:
        main(0);
    except rospy.ROSInterruptException:
        pass

